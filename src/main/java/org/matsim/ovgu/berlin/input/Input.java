package org.matsim.ovgu.berlin.input;

public class Input {
	public static void main(String[] args) {
	}

	public static double[] getExpectedArrivalTimes(int hour, double[] expectedTravelTime) {

		double tourStart = hour * 3600.;
		// calculate expected arrival times from expected travel times
		double[] expectedArrival = new double[expectedTravelTime.length];
		expectedArrival[0] = tourStart + expectedTravelTime[0];
		for (int x = 1; x < expectedArrival.length; x++)
			expectedArrival[x] = expectedArrival[x - 1] + serviceTime + expectedTravelTime[x] + usedBuffer[x];

		return expectedArrival;
	}

	////// Buffering
	private static final double[] bufferNone = new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
	private static final double[] buffer05M = new double[] { 0.0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
			30, 30, 30, 30, 30, 30 };
	private static final double[] buffer5P = new double[] { 0.0, 71.13958333, 24.325, 34.52708333, 29.22291667,
			22.79166667, 33.59375, 32.53958333, 27.5, 41.79791667, 40.01458333, 22.21458333, 28.20416667, 29.03333333,
			32.11458333, 39.04375, 20.32291667, 40.35625, 30.7625, 43.7125 };
	private static final double[] bufferSD = new double[] { 0.0, 80.0036349, 47.0496192, 36.41425907, 35.90378249,
			15.29342633, 25.18318305, 37.42657163, 39.97916124, 46.68465055, 46.93388893, 15.66439478, 17.46643607,
			35.67756843, 47.81603564, 45.54422073, 40.90026402, 58.57922876, 68.71817445, 97.82222396 };
	private static final double[] bufferSDcum = new double[] { 0.0, 80.0036349, 92.81297465, 99.70078499, 105.9685242,
			107.066414, 109.9882254, 116.1815734, 122.8677798, 131.4380003, 139.566249, 140.4425545, 141.524512,
			145.9523086, 153.5853172, 160.1958979, 165.3346827, 175.4054826, 188.3859624, 212.2697772 };
	private static final double[] bufferSDcumStep = new double[] { 0.0, 80.0036349, 12.80933975, 6.887810338,
			6.267739227, 1.097889815, 2.921811347, 6.19334797, 6.686206476, 8.57022045, 8.128248678, 0.876305534,
			1.081957523, 4.4277966, 7.633008567, 6.610580692, 5.138784794, 10.07079996, 12.98047979, 23.88381484 };
	private static final double[] buffer5Padjust = new double[] { 0.0, 63.04184049, 21.55611121, 30.59690229,
			25.89650325, 20.19731558, 29.76980929, 28.83563729, 24.36970435, 37.04010442, 35.45976602, 19.68592102,
			24.99371648, 25.72849999, 28.45901459, 34.59944161, 18.00958075, 35.76254113, 27.26083746, 38.73675278 };
	private static final double[] bufferSDadjust = new double[] { 0.0, 54.34895303, 31.96226705, 24.73733673,
			24.39055414, 10.38929932, 17.1077181, 25.42503208, 27.15908545, 31.71433252, 31.88364789, 10.6413097,
			11.86549229, 24.2368799, 32.48291754, 30.93960314, 27.78481917, 39.79468878, 46.68238938, 66.45367379 };
	private static final double[] bufferSDcumadjust = new double[] { 0.0, 17.61588307, 20.43635281, 21.95296967,
			23.33305398, 23.57479673, 24.21814608, 25.58185029, 27.05407629, 28.94114057, 30.73088773, 30.92384016,
			31.1620748, 32.13702484, 33.81772581, 35.27329988, 36.40480137, 38.62227604, 41.48042886, 46.73937103 };
	private static final double[] bufferSDcumStepadjust = new double[] { 0.0, 214.8307332, 34.3964353, 18.49557645,
			16.83052296, 2.948121972, 7.845829441, 16.63076293, 17.95421723, 23.01328866, 21.82647858, 2.353110087,
			2.905339593, 11.88979465, 20.49662905, 17.75114217, 13.79898434, 27.04273802, 34.85599116, 64.13430416 };

	private static final double[] usedBuffer = buffer5P;
	// simple buffer add static value
	private static final double staticBuffer = 0.5 * 60;
	private static final double percentBuffer = 0.05;

	// adaptive buffer for each trip
	private static final double[] adaptiveBufferSD = new double[] { 0.0, 85.73326354, 46.62820789, 30.97045138,
			41.66466925, 25.29628171, 19.50129223, 32.75372911, 46.29139309, 37.8633148, 48.5075136, 17.74839453,
			19.30589754, 38.66120037, 41.73473778, 57.63299611, 33.96263181, 68.88419599, 66.03484477, 71.02103778 };

	private static final double[] adaptiveBufferSD07 = new double[] { 0.0, 61.98514954, 33.7121943, 22.39163635,
			30.12355587, 18.28921168, 14.09943428, 23.68094615, 33.46867721, 27.3751766, 35.07093233, 12.83208925,
			13.95816392, 27.95204787, 30.17421541, 41.66865619, 24.5549828, 49.8032737, 47.74319277, 51.34821032 };

	private static final double[] adaptiveBufferCumSD = new double[] { 0.0, 85.73326354, 97.59294159, 102.3892138,
			110.5418281, 113.3992841, 115.0638868, 119.6348812, 128.2785948, 133.7498729, 142.2744087, 143.37717,
			144.6711117, 149.7478513, 155.4548401, 165.7943592, 169.2372001, 182.7190805, 194.2855195, 206.8594955 };

	private static final double[] adaptiveBufferCumSD44 = new double[] { 0.0, 19.48483262, 22.180214, 23.27027587,
			25.12314276, 25.77256457, 26.15088336, 27.18974573, 29.15422609, 30.39769838, 32.33509288, 32.58572045,
			32.87979811, 34.03360257, 35.33064547, 37.68053618, 38.46300003, 41.52706374, 44.15579989, 47.01352171 };

	private static final double[] aBuffer = new double[] { 0.0, 85.73326354, 11.85967805, 4.796272232, 8.152614327,
			2.85745597, 1.664602646, 4.57099447, 8.64371356, 5.471278065, 8.524535821, 1.102761308, 1.293941688,
			5.076739619, 5.706988786, 10.33951913, 3.442840913, 13.48188033, 11.56643904, 12.57397604 };

	private static final double[] aBuffer29 = new double[] { 0.0, 248.6264643, 34.39306634, 13.90918947, 23.64258155,
			8.286622314, 4.827347673, 13.25588396, 25.06676933, 15.86670639, 24.72115388, 3.198007793, 3.752430894,
			14.72254489, 16.55026748, 29.98460547, 9.984238647, 39.09745297, 33.54267322, 36.46453052 };

	// <<<<<<<<< Input >>>>>>>>>
	public static final double serviceTime = 2 * 60;

	private static final double standardTW = 10 * 60;
	private static final double premiumTW = 2 * 60;

	public static final double[] standardTWs = new double[] { standardTW, standardTW, standardTW, standardTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW };

	public static final double[] premiumTWs = new double[] { premiumTW, premiumTW, premiumTW, premiumTW, premiumTW,
			premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW,
			premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW };

	public static final double[] mix1spsp = new double[] { standardTW, standardTW, premiumTW, premiumTW, standardTW,
			standardTW, premiumTW, premiumTW, standardTW, standardTW, premiumTW, premiumTW, standardTW, standardTW,
			premiumTW, premiumTW, standardTW, standardTW, premiumTW, premiumTW };

	public static final double[] mix2sp = new double[] { standardTW, standardTW, standardTW, standardTW, standardTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, premiumTW, premiumTW, premiumTW, premiumTW,
			premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW };

	public static final double[] mix3ps = new double[] { premiumTW, premiumTW, premiumTW, premiumTW, premiumTW,
			premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, standardTW, standardTW, standardTW, standardTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, standardTW };

	public static final double[] mix4f3ps = new double[] { premiumTW, premiumTW, premiumTW, premiumTW, premiumTW,
			premiumTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, standardTW };

	public static final double[] mix5m4p = new double[] { standardTW, standardTW, standardTW, standardTW, standardTW,
			standardTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW, premiumTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, standardTW };

	public static final double[] mix6l3p = new double[] { standardTW, standardTW, standardTW, standardTW, standardTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW, standardTW,
			standardTW, standardTW, standardTW, standardTW, standardTW, standardTW };

	///// Main Example Tour
	public static final String depot = "9826";
	// link id's for example tour
	public static final String[] tour = new String[] { "9826", "10837", "37615", "122985", "34319", "97538", "82306",
			"113960", "76890", "64709", "18863", "14787", "116212", "63691", "30311", "76811", "20545", "142877",
			"118271", "29572" };

	// expected avg traveltimes for example tour
	public static final double[] avgTT = new double[] { 0.0, 1422.791667, 486.5, 690.5416667, 584.4583333, 455.8333333,
			671.875, 650.7916667, 550, 835.9583333, 800.2916667, 444.2916667, 564.0833333, 580.6666667, 642.2916667,
			780.875, 406.4583333, 807.125, 615.25, 874.25 };

	// expected min traveltimes for example tour
	public static final double[] minTT = new double[] { 0.0, 1318, 419, 643, 534, 426, 629, 587, 490, 758, 719, 412,
			534, 528, 557, 688, 348, 714, 508, 702 };

	// expected max traveltimes for example tour
	public static final double[] maxTT = new double[] { 0.0, 1640, 612, 777, 656, 483, 714, 760, 650, 940, 876, 474,
			607, 652, 761, 838, 507, 937, 765, 1072 };

	// expected avg traveltimes for example tour
	public static final double[] avgTTold = new double[] { 0.0, 1386.78514, 461.0143096, 660.7601614, 482.7117253,
			531.2474148, 615.2137168, 636.927544, 524.2512817, 773.1225155, 800.9296293, 404.1527514, 525.0083581,
			599.2197634, 593.5771799, 760.3694996, 389.5929394, 753.3953592, 605.2273493, 837.7488374 };

	// expected min traveltimes for example tour
	public static final double[] minTTold = new double[] { 0.0, 1269.541339, 397.5076803, 625.1344664, 431.6207752,
			490.3279327, 592.9618135, 589.0757879, 469.5942699, 720.6765824, 725.6061951, 379.5941993, 495.9362131,
			545.9396331, 525.6032059, 662.4026367, 345.5011254, 656.0057098, 512.9801903, 743.2175726 };

	// expected max traveltimes for example tour
	public static final double[] maxTTold = new double[] { 0.0, 1592.517231, 533.4664708, 738.1203464, 582.9350352,
			582.2497275, 663.5987905, 702.907558, 653.5758981, 896.8119032, 892.120581, 445.7765853, 560.4866599,
			667.6098697, 677.0537879, 839.0182749, 474.0636164, 887.3781677, 750.0190174, 1049.122674 };

	// link id's for a larger example tour
	public static final String[] lTour = new String[] { "9826", "10837", "37615", "122985", "34319", "97538", "82306",
			"113960", "76890", "64709", "18863", "14787", "116212", "63691", "30311", "76811", "20545", "142877",
			"118271", "29572", "9826", "10837", "37615", "122985", "34319", "97538", "82306", "113960", "76890",
			"64709", "18863", "14787", "116212", "63691", "30311", "76811", "20545", "142877", "118271", "29572",
			"9826", "10837", "37615", "122985", "34319", "97538", "82306", "113960", "76890", "64709", "18863", "14787",
			"116212", "63691", "30311", "76811", "20545", "142877", "118271", "29572", "9826", "10837", "37615",
			"122985", "34319", "97538", "82306", "113960", "76890", "64709", "18863", "14787", "116212", "63691",
			"30311", "76811", "20545", "142877", "118271", "29572", "9826", "10837", "37615", "122985", "34319",
			"97538", "82306", "113960", "76890", "64709", "18863", "14787", "116212", "63691", "30311", "76811",
			"20545", "142877", "118271", "29572", "9826", "10837", "37615", "122985", "34319", "97538", "82306",
			"113960", "76890", "64709", "18863", "14787", "116212", "63691", "30311", "76811", "20545", "142877",
			"118271", "29572", "9826", "10837", "37615", "122985", "34319", "97538", "82306", "113960", "76890",
			"64709", "18863", "14787", "116212", "63691", "30311", "76811", "20545", "142877", "118271", "29572" };

	// expected avg traveltimes for larger example tour
	public static final double[] lAvgTT = new double[] { 0, 1386.78514, 461.0143096, 660.7601614, 482.7117253,
			531.2474148, 615.2137168, 636.927544, 524.2512817, 773.1225155, 800.9296293, 404.1527514, 525.0083581,
			599.2197634, 593.5771799, 760.3694996, 389.5929394, 753.3953592, 605.2273493, 837.7488374, 784.4261075,
			1386.78514, 461.0143096, 660.7601614, 482.7117253, 531.2474148, 615.2137168, 636.927544, 524.2512817,
			773.1225155, 800.9296293, 404.1527514, 525.0083581, 599.2197634, 593.5771799, 760.3694996, 389.5929394,
			753.3953592, 605.2273493, 837.7488374, 784.4261075, 1386.78514, 461.0143096, 660.7601614, 482.7117253,
			531.2474148, 615.2137168, 636.927544, 524.2512817, 773.1225155, 800.9296293, 404.1527514, 525.0083581,
			599.2197634, 593.5771799, 760.3694996, 389.5929394, 753.3953592, 605.2273493, 837.7488374, 784.4261075,
			1386.78514, 461.0143096, 660.7601614, 482.7117253, 531.2474148, 615.2137168, 636.927544, 524.2512817,
			773.1225155, 800.9296293, 404.1527514, 525.0083581, 599.2197634, 593.5771799, 760.3694996, 389.5929394,
			753.3953592, 605.2273493, 837.7488374, 784.4261075, 1386.78514, 461.0143096, 660.7601614, 482.7117253,
			531.2474148, 615.2137168, 636.927544, 524.2512817, 773.1225155, 800.9296293, 404.1527514, 525.0083581,
			599.2197634, 593.5771799, 760.3694996, 389.5929394, 753.3953592, 605.2273493, 837.7488374, 784.4261075,
			1386.78514, 461.0143096, 660.7601614, 482.7117253, 531.2474148, 615.2137168, 636.927544, 524.2512817,
			773.1225155, 800.9296293, 404.1527514, 525.0083581, 599.2197634, 593.5771799, 760.3694996, 389.5929394,
			753.3953592, 605.2273493, 837.7488374, 784.4261075, 1386.78514, 461.0143096, 660.7601614, 482.7117253,
			531.2474148, 615.2137168, 636.927544, 524.2512817, 773.1225155, 800.9296293, 404.1527514, 525.0083581,
			599.2197634, 593.5771799, 760.3694996, 389.5929394, 753.3953592, 605.2273493, 837.7488374 };

	// expected min traveltimes for larger example tour
	public static final double[] lMinTT = new double[] { 0, 1269.541339, 397.5076803, 625.1344664, 431.6207752,
			490.3279327, 592.9618135, 589.0757879, 469.5942699, 720.6765824, 725.6061951, 379.5941993, 495.9362131,
			545.9396331, 525.6032059, 662.4026367, 345.5011254, 656.0057098, 512.9801903, 743.2175726, 687.2322049,
			1269.541339, 397.5076803, 625.1344664, 431.6207752, 490.3279327, 592.9618135, 589.0757879, 469.5942699,
			720.6765824, 725.6061951, 379.5941993, 495.9362131, 545.9396331, 525.6032059, 662.4026367, 345.5011254,
			656.0057098, 512.9801903, 743.2175726, 687.2322049, 1269.541339, 397.5076803, 625.1344664, 431.6207752,
			490.3279327, 592.9618135, 589.0757879, 469.5942699, 720.6765824, 725.6061951, 379.5941993, 495.9362131,
			545.9396331, 525.6032059, 662.4026367, 345.5011254, 656.0057098, 512.9801903, 743.2175726, 687.2322049,
			1269.541339, 397.5076803, 625.1344664, 431.6207752, 490.3279327, 592.9618135, 589.0757879, 469.5942699,
			720.6765824, 725.6061951, 379.5941993, 495.9362131, 545.9396331, 525.6032059, 662.4026367, 345.5011254,
			656.0057098, 512.9801903, 743.2175726, 687.2322049, 1269.541339, 397.5076803, 625.1344664, 431.6207752,
			490.3279327, 592.9618135, 589.0757879, 469.5942699, 720.6765824, 725.6061951, 379.5941993, 495.9362131,
			545.9396331, 525.6032059, 662.4026367, 345.5011254, 656.0057098, 512.9801903, 743.2175726, 687.2322049,
			1269.541339, 397.5076803, 625.1344664, 431.6207752, 490.3279327, 592.9618135, 589.0757879, 469.5942699,
			720.6765824, 725.6061951, 379.5941993, 495.9362131, 545.9396331, 525.6032059, 662.4026367, 345.5011254,
			656.0057098, 512.9801903, 743.2175726, 687.2322049, 1269.541339, 397.5076803, 625.1344664, 431.6207752,
			490.3279327, 592.9618135, 589.0757879, 469.5942699, 720.6765824, 725.6061951, 379.5941993, 495.9362131,
			545.9396331, 525.6032059, 662.4026367, 345.5011254, 656.0057098, 512.9801903, 743.2175726 };

	// expected max traveltimes for larger example tour
	public static final double[] lMaxTT = new double[] { 0, 1592.517231, 533.4664708, 738.1203464, 582.9350352,
			582.2497275, 663.5987905, 702.907558, 653.5758981, 896.8119032, 892.120581, 445.7765853, 560.4866599,
			667.6098697, 677.0537879, 839.0182749, 474.0636164, 887.3781677, 750.0190174, 1049.122674, 896.4662972,
			1592.517231, 533.4664708, 738.1203464, 582.9350352, 582.2497275, 663.5987905, 702.907558, 653.5758981,
			896.8119032, 892.120581, 445.7765853, 560.4866599, 667.6098697, 677.0537879, 839.0182749, 474.0636164,
			887.3781677, 750.0190174, 1049.122674, 896.4662972, 1592.517231, 533.4664708, 738.1203464, 582.9350352,
			582.2497275, 663.5987905, 702.907558, 653.5758981, 896.8119032, 892.120581, 445.7765853, 560.4866599,
			667.6098697, 677.0537879, 839.0182749, 474.0636164, 887.3781677, 750.0190174, 1049.122674, 896.4662972,
			1592.517231, 533.4664708, 738.1203464, 582.9350352, 582.2497275, 663.5987905, 702.907558, 653.5758981,
			896.8119032, 892.120581, 445.7765853, 560.4866599, 667.6098697, 677.0537879, 839.0182749, 474.0636164,
			887.3781677, 750.0190174, 1049.122674, 896.4662972, 1592.517231, 533.4664708, 738.1203464, 582.9350352,
			582.2497275, 663.5987905, 702.907558, 653.5758981, 896.8119032, 892.120581, 445.7765853, 560.4866599,
			667.6098697, 677.0537879, 839.0182749, 474.0636164, 887.3781677, 750.0190174, 1049.122674, 896.4662972,
			1592.517231, 533.4664708, 738.1203464, 582.9350352, 582.2497275, 663.5987905, 702.907558, 653.5758981,
			896.8119032, 892.120581, 445.7765853, 560.4866599, 667.6098697, 677.0537879, 839.0182749, 474.0636164,
			887.3781677, 750.0190174, 1049.122674, 896.4662972, 1592.517231, 533.4664708, 738.1203464, 582.9350352,
			582.2497275, 663.5987905, 702.907558, 653.5758981, 896.8119032, 892.120581, 445.7765853, 560.4866599,
			667.6098697, 677.0537879, 839.0182749, 474.0636164, 887.3781677, 750.0190174, 1049.122674 };

	// nodes for example tour
	public static final long[] tourNodes = new long[] { 100163057, 3712222554l, 26870674, 29218295, 29270520, 29785890,
			282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202, 274977654, 29686277,
			26785807, 269843861, 26761185, 26554202, 254870237 };

	// nodes for a larger example tour
	public static final long[] lTourNodes = new long[] { 100163057, 3712222554l, 26870674, 29218295, 29270520, 29785890,
			282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202, 274977654, 29686277,
			26785807, 269843861, 26761185, 26554202, 254870237, 100163057, 3712222554l, 26870674, 29218295, 29270520,
			29785890, 282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202, 274977654,
			29686277, 26785807, 269843861, 26761185, 26554202, 254870237, 100163057, 3712222554l, 26870674, 29218295,
			29270520, 29785890, 282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202,
			274977654, 29686277, 26785807, 269843861, 26761185, 26554202, 254870237, 100163057, 3712222554l, 26870674,
			29218295, 29270520, 29785890, 282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202,
			274977654, 29686277, 26785807, 269843861, 26761185, 26554202, 254870237, 100163057, 3712222554l, 26870674,
			29218295, 29270520, 29785890, 282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202,
			274977654, 29686277, 26785807, 269843861, 26761185, 26554202, 254870237, 100163057, 3712222554l, 26870674,
			29218295, 29270520, 29785890, 282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202,
			274977654, 29686277, 26785807, 269843861, 26761185, 26554202, 254870237, 100163057, 3712222554l, 26870674,
			29218295, 29270520, 29785890, 282395034, 268224213, 4313424156l, 275726428, 1380016717, 677228677, 26754202,
			274977654, 29686277, 26785807, 269843861, 26761185, 26554202, 254870237 };

}
